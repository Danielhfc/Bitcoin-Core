# Copyright (c) 2023-present The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or https://opensource.org/license/mit/.

file(READ ${RAW_FILE} hex_content HEX)
string(REGEX MATCHALL "([A-Za-z0-9][A-Za-z0-9])" bytes "${hex_content}")

string(LENGTH "${hex_content}" hex_length)
math(EXPR byte_count "${hex_length} / 2")

file(WRITE ${GENERATED_FILE} "#ifndef BITCOIN_INIT_IP_ASN_H\n")
file(APPEND ${GENERATED_FILE} "#define BITCOIN_INIT_IP_ASN_H\n\n")
file(APPEND ${GENERATED_FILE} "#include <array>\n")
file(APPEND ${GENERATED_FILE} "#include <cstddef>\n\n")
file(APPEND ${GENERATED_FILE} "/**\n")
file(APPEND ${GENERATED_FILE} " * ASMap data, mapping IP prefixes to ASNs,\n")
file(APPEND ${GENERATED_FILE} " * AUTOGENERATED by GenerateHeaderAsmap.cmake\n")
file(APPEND ${GENERATED_FILE} " */\n\n")
file(APPEND ${GENERATED_FILE} "inline constexpr std::array<std::byte, ${byte_count}> ip_asn = {\n")

set(i 0)
foreach(byte ${bytes})
  math(EXPR i "${i} + 1")
  math(EXPR remainder "${i} % 8")
  if(remainder EQUAL 0)
    file(APPEND ${GENERATED_FILE} "std::byte{0x${byte}},\n")
  else()
    file(APPEND ${GENERATED_FILE} "std::byte{0x${byte}}, ")
  endif()
endforeach()

file(APPEND ${GENERATED_FILE} "\n};\n\n")
file(APPEND ${GENERATED_FILE} "#endif // BITCOIN_INIT_IP_ASN_H")
